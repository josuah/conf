#!/bin/sh -eu

send() { set -eu
	ssh "root@$host" "$*"
}

cmd() { set -eu
	local type="$1" cmd="$2" name="$3" vars="$4"

	echo "-- $cmd $type/$name" $vars
	IFS='
'
	for x in $(echo "$vars" | xargs -n 1); do
		if [ "${x%%=*}" = "os_$os" ]; then
			export "var_this_os=${x#*=}"
		fi
		export "var_$x"
	done
	unset IFS

	"cmd_${type}_${cmd}" "$name"
}

apply() { set -eu
	local cmd="$1" type name vars exit=0

	while IFS=" /" read -r type name vars; do
		if type "cmd_${type}_${cmd}" >/dev/null; then
			if ! (cmd "$type" "$cmd" "$name" "$vars"); then
				echo error
				exit=1
			fi
		fi
	done
	return "$exit"
}

list() { set -eu
	local level="$1" node="$2"
	shift 2

	printf "%-$((level * 2))s%s%s\n" "" "$node" "${*:+ $*}"
	if [ -f "$etc/$node/db" ]; then
		while read -r node vars; do
			case "$node" in
			(add=*) list $((level + 1)) "${node#add=}" $* $vars ;;
			esac
		done <$etc/$node/db
	fi
}

cmd="${1:-help}"
host="${2:-$(hostname -s)}"
case $# in (0) ;; (1) shift 1 ;; (*) shift 2 ;; esac

export etc="${ADM_CONFIG:-/etc/adm}"
export usr="${ADM_PREFIX:-/usr/adm}"
export cache="${ADM_CACHE:-/var/cache/adm}"
export os="$(adm-db "$etc/host/$host/db" get os)"

export PATH=/bin:/sbin:/usr/bin:/usr/sbin
for x in adm /usr/*/bin /usr/*/sbin; do
	export PATH="$PATH:$x"
done

export tmp="$(mktemp -d)"
trap 'rm -rf "$tmp"' INT TERM EXIT HUP

case $cmd in
(list)
	list 0 "host/$host" "" "$@"
	;;
(install | update | uninstall | start | stop | restart | reload | status)
	. "$etc/lib/cmd_pkg.sh"
	. "$etc/lib/cmd_mod.sh"
	. "$etc/lib/cmd_golang.sh"
	. "$etc/lib/cmd_repo.sh"
	. "$etc/lib/cmd_exec.sh"
	. "$etc/lib/os_$os.sh"
	list 0 "host/$host" "" "$@" | sed 's,\\\\,\\s,g; s,\\",\\q,g' | apply "$cmd"
	;;
(*)
	echo "usage: ${0##*/} cmd [host] [key=value...]"
	echo "list, install, update, uninstall, start, stop, restart, reload, status"
	;;
esac
