#!/bin/sh -eu

cmd() { set -eu
	local type="$1" cmd="$2" name="$3"
	shift 3

	echo "-- $cmd $type/$name" "$@" >&2
	for x in "$@"; do
		if [ "${x%%=*}" = "os_$os" ]; then
			export "var_this_os=${x#*=}"
		fi
		export "var_$x"
	done
	"cmd_${type}_${cmd}" "$name"
}

apply() { set -eu
	local cmd="$1" node="$2" vars exit

	while read node vars; do
		local type=${node%%/*}
		local name=${node#*/}
		if type "cmd_${type}_${cmd}" >/dev/null; then
			if ! (cmd "$type" "$cmd" "$name" $vars); then
				echo error
				exit=1
			fi
		fi
	done
	return "${exit:-0}"
}

list() { set -eu
	local level="$1" node="$2"
	shift 2

	printf "%-$((level * 2))s%s%s\n" "" "$node" "${*:+ $*}"
	if [ -f "$etc/db/node/$node" ]; then
		while read node vars; do
			list $((level + 1)) "${node#add=}" "$@" $vars
		done <$etc/db/node/$node
	fi
}

export etc="${ADM_CONFIG:-/etc/adm}"

export usr="${ADM_PREFIX:-/usr/adm}"

export cache="${ADM_CACHE:-/var/cache/adm}"

export lib="${0%/*/*}/lib/adm"

export PATH=/bin:/sbin:/usr/bin:/usr/sbin
for x in adm /usr/*/bin /usr/*/sbin; do
	export PATH="$PATH:$x"
done

export os=$(uname)
type >/dev/null apt		&& export os=DebianLinux
type >/dev/null apk		&& export os=AlpineLinux
type >/dev/null pacman		&& export os=ArchLinux
type >/dev/null yum		&& export os=RedHatLinux
type >/dev/null zypper		&& export os=SuseLinux
type >/dev/null emerge		&& export os=GentooLinux
type >/dev/null xbps-install	&& export os=VoidLinux

export tmp="$(mktemp -d)"
trap 'rm -rf "$tmp"' INT TERM EXIT HUP

cmd="${1:-help}"
node="${2:-host/$(hostname -s)}"
case $# in (0) ;; (1) shift 1 ;; (*) shift 2 ;; esac

case $cmd in
(sync | install | update | uninstall | start | stop | restart | reload | status | monitor)
	. "$lib/cmd_build.sh"
	. "$lib/cmd_golang.sh"
	. "$lib/cmd_host.sh"
	. "$lib/cmd_module.sh"
	. "$lib/cmd_monitor.sh"
	. "$lib/cmd_repo.sh"
	. "$lib/os_$os.sh"
	list 0 "$node" "$@" | apply "$cmd" "$node"
	;;

(list)
	list 0 "$node" "$@"
	;;

(*)
	echo "usage: ${0##*/} cmd [node/name] [key=value...]"
	echo "cmd: list, install, update, uninstall, start, stop, restart, reload, status, monitor"
	;;
esac
