#!/bin/sh -eu

lib="${0%/*/*}/lib/adm"

. "$lib/cmd_build.sh"
. "$lib/cmd_golang.sh"
. "$lib/cmd_module.sh"
. "$lib/cmd_monitor.sh"
. "$lib/cmd_repo.sh"

log() {
	echo "$1" >&2
}

check_package_manager() {
	if type "$1" >/dev/null; then
		exec echo "$2"
	fi
}

get_os() {
	kernel=$(uname)

	case $kernel in
	(Linux)
		check_package_manager	apt		DebianLinux
		check_package_manager	apk		AlpineLinux
		check_package_manager	pacman		ArchLinux
		check_package_manager	yum		RedHatLinux
		check_package_manager	zypper		SuseLinux
		check_package_manager	emerge		GentooLinux
		check_package_manager	xbps-install	VoidLinux
		;;
	(*)
		exec echo "$kernel"
		;;
	esac
}

trap_add() {
	trap="${trap:-:}; $1"
	trap "$trap" INT TERM EXIT HUP
}

trap_pop() {
	trap="${trap%; *}"
	trap "$trap" INT TERM EXIT HUP
}

run() {
	local command="$1" item="$2"
	shift 2

	for x in "$@"; do
		if [ "${x%%=*}" = "$os" ]; then
			export "var_this_os=${x#*=}"
		fi
		export "var_$x"
	done

	log ">>> $part/$item"
	"$command" "$item"
}

apply() {
	local command="$1" node="$2" vars exit
	shift 2

	local vars
	while read node vars; do
		local part=${node%/*}
		local item=${node#*/}

		if type "cmd_${part}_${command}" >/dev/null; then
			(run cmd_${part}_${command} "$item" $vars "$@") || exit=1
		fi
	done

	return "${exit:-0}"
}

list() {
	local level="$1" node="$2"
	shift 2

	printf "%-$((level * 2))s%s" "" "$node"
	printf ' %s' "$@"
	printf '\n'

	[ -f "$etc/def/$node" ] || return 0

	while read node vars; do
		list $((level + 1)) "$node" "$@" $vars
	done <$etc/def/$node
}

main() {
	[ $# = 0 ] && exec "$0" help

	local command="$1"
	shift

	local i=$#
	while [ $i -gt 0 ]; do i=$((i - 1))
		case $1 in
		(*=*) set -- "$@" "$1" ;;
		(*) local node="$1" ;;
		esac
		shift
	done

	export PATH=/bin:/sbin:/usr/bin:/usr/sbin
	for x in adm /usr/*/bin /usr/*/sbin; do
		[ -d "$x" ] && export PATH="$PATH:$x"
	done

	export host="$(hostname | sed 's/[.].*//')"
	export os="$(get_os)"
	export tmp="$(mktemp -d)"
	export etc="/etc/adm"

	trap_add 'rm -rf "$tmp"'

	local key value
	for x in "$etc/var/host/$host/"*; do
		[ -f "$x" ] || continue
		read -r value <$x
		export "var_${x##*/}=$value"
	done

	if [ -f "$lib/os_$os.sh" ]; then
		. "$lib/os_$os.sh"
	fi

	: ${node:=host/$host}

	case $command in
	(install | enable | disable | start | stop | restart | reload \
	| status | monitor)
		list 0 "$node" "$@" | apply "$command" "$node" "$@"
		;;
	(list)
		list 0 "$node" "$@"
		;;
	(*)
		echo "usage: ${0##*/} command [node] [key=value...]"
		echo "command: list, monitor, install, enable, disable, start, stop, restart, reload, status"
		;;
	esac
}

main "$@"
