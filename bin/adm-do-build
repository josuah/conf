#!/bin/sh -eu

. adm-lib

repo() {
	local repo="${1:?}"
	local git="/var/cache/adm/git/$name"

	[ -d $git ] && return 0
	git clone --mirror "$repo" "$git"
}

commit() {
	local git="/var/cache/adm/git/$name"
	export version="${1:?}"
	export source="/var/cache/adm/source/$name-$version"

	[ -d "$source" ] && return 0
	git -C "$git" rev-parse "$version" >/dev/null || git -C "$git" fetch
	git -C "$git" rev-parse "$version" >/dev/null || exit 1
	mkdir -p "$source"
	git -C "$git" archive "$version" | tar -C "$source" -xf -
}

version() {
	export version=${1:?}
}

archive() {
	local url=${1:?}
	export archive="/var/cache/adm/archive/$name-$(basename "$url")"
	export source=/var/cache/adm/source/$name-$version

	[ -d "$source" ] && return 0

	trap_add 'rm -f "$archive"'
	mkdir -p "$(dirname "$archive")"
	curl -Ls -o "$archive" "$url"
}

checksum() {
	local sum="${1:?}"

	[ -d "$source" ] && return 0

	if command -v sha256sum >/dev/null; then
		sha256sum "$archive" | sed 's/ .*//'
	elif command -v sha256 >/dev/null; then
		sha256 "$archive" | sed 's/ .*//'
	elif command -v openssl >/dev/null; then
		openssl sha256 "$archive" | sed 's/.* //'
	fi | tee /dev/stderr | grep -Fqx "$sum" || {
		echo >&2 "$sum < expected"
		exit 1
	}

	mkdir -p "$tmp/build" "$(dirname "$source")"
	rm -rf "$source"

	case "$archive" in
	(*gz) gzip -cd "$archive" ;;
	(*xz) xz -cd "$archive" ;;
	(*lz) lz -cd "$archive" ;;
	esac | tar -x -f - -C "$tmp/build"

	mv "$tmp/build/"* "$source"
}

main() {
	case $command in
	(enable)
		. "$base/build/$name/build.sh"

		export PREFIX="$base"
		export DESTDIR="$PREFIX/opt/$name-$version"

		[ -d "$DESTDIR" ] && exit 0

		cd "$source"

		if [ -d "$base/build/$name/files" ]; then
			cp -r "$base/build/$name/files/"* .
		fi

		trap_add 'rm -rf "$DESTDIR"'

		mkdir -p "$DESTDIR/bin" "$DESTDIR/sbin" "$DESTDIR/lib" \
		  "$DESTDIR/libexec" "$DESTDIR/include" \
		  "$DESTDIR$PREFIX"

		ln -sf "$DESTDIR/bin" "$DESTDIR/sbin" "$DESTDIR/lib" \
		  "$DESTDIR/libexec" "$DESTDIR/include" \
		  "$DESTDIR$PREFIX"

		build
		trap_pop

		rm -rf "$source" "$DESTDIR/usr"
		;;
	esac

	case $command in
	(enable)
		cd "$DESTDIR"
		find *	-type d -exec mkdir -p "$PWD/{}" \; -o \
			-type f -exec ln -sf "$PWD/{}" "$PREFIX/{}" \;
		;;
	esac
}

main "$@"
