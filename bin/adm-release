#!/bin/sh -eu

list() {
	ls | grep -Ex 'v[0-9]+' | sort -n -k 2,2 -t v "$@"
}

set -- "${@:-help}"
case $1 in

## adm-release init <url> - setup release directories and git repo
(init)
	[ $# = 2 ] || exec "$0" usage

	if [ ! -d repo ]; then
		git clone --mirror "$2" repo
	else
		git -C repo set-url origin "$2"
		git -C repo fetch origin "$2"
	fi
	;;

## adm-release list       - list available releases
(list)
	[ $# = 1 ] || exec "$0" usage

	[ -h current ] && cur=$(readlink current) || cur=
	list | while read v; do
		read date	<$v/.adm/date
		read commit	<$v/.adm/commit
		read ref	<$v/.adm/ref
		[ "$v" = "$cur" ] && x=">" || x="-"
		printf ' %s %4s %s %s %s\n' "$x" "$v" "$date" "$commit" "$ref"
	done
	;;

## adm-release pull <ref> - deploy git <ref> as a new release
(pull)
	[ $# = 2 ] || exec "$0" usage

	v=$(list | awk -F v '$2 > n { n = $2 } END { print "v"(n + 1) }')

	git -C repo fetch origin "$2"
	commit=$(git -C repo rev-parse "$2")

	mkdir -p "$v/.adm"
	echo "$commit"			>$v/.adm/commit
	date +"%Y-%m-%d %H:%M:%S %z"	>$v/.adm/date
	echo "$2"			>$v/.adm/ref
	
	git -C repo archive "$commit" | tar -x -f - -C "$v"
	"$0" link "$v"
	"$0" clear 5
	;;

## adm-release link <v>   - move current release to <v>
(link)
	[ $# = 2 ] || exec "$0" usage

	ls "$2/" >/dev/null
	ln -s "$2" repo/current
	mv -f repo/current .
	;;

## adm-release clear <n>  - keep only the lasts and the current one
(clear)
	[ $# = 2 ] && [ $2 -gt 0 ] || exec "$0" usage

	v=$(readlink current | sed 's,.*/,,')
	list -r | grep -Fvx "$v" | sed "1,$2 d" | xargs rm -rf
	"$0" list
	;;

(*)
	echo "usage:"
	sed -n 's/^##// p' "$0"
	;;
esac
