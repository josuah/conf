#!/usr/bin/awk -f

function replace(str, this,
	head, tail, key, value, line, path, cmd, pass)
{
	tail = str
	head = ""
	while (match(tail, "\\{\\{[^}]+\\}\\}")) {
		key = substr(tail, RSTART + 2, RLENGTH - 4)
		gsub("%", this, key)
		gsub("@", global["hostname"], key)
		sub("^ *", "", key)
		sub(" *$", "", key)

		if (key == "this") {
			value = this
		} else if (key == "now") {
			value = global["now"]
		} else {
			value = ""
			while ((getline line <key) > 0)
				value = value line "\n"
			sub("\n$", "", value)
		}

		head = head substr(tail, 1, RSTART - 1) value
		tail = substr(tail, RSTART + RLENGTH)
	}
	return head tail
}

function read_block(\
	str, line)
{
	str = ""
	while (getline line && line !~ /^#end/)
		str = str line "\n"
	return str
}

function list_file(path, table,
	i)
{
	if (system("test -f '" path "'") != 0)
		return -1
	for (i = 1; (getline <path) == 0; i++)
		table[i] = $0
	close(path)
	return 0
}

function list_dir(path, table,
	cmd, i)
{
	if (system("test -d '" path "'") != 0)
		return -1
	cmd = "ls '" path "'"
	for (i = 1; cmd | getline > 0; i++)
		table[i] = $0
	close(cmd)
}

function print_block(str, table,
	i)
{
	for (i in table)
		printf "%s", replace(str, table[i])
}

BEGIN {
	cmd = "date +'%Y/%m/%d %H:%M:%S %z'"
	cmd | getline global["now"]
	close(cmd)

	cmd = "hostname -s"
	cmd | getline global["hostname"]
	close(cmd)
}

/^#for / {
	list_file($2, table)
	list_dir($2, table)
	print_block(read_block(), table)
	delete table
	next
}

{
	print replace($0)
}
