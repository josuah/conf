#!/bin/sh -eu

repo() {
	local repo=${1:?} 
	local git=$base/cache/git/$name

	[ -d $git ] && return 0
	git clone --mirror "$repo" "$git"
}

commit() {
	local commit=${1:?}
	local git=$base/cache/git/$name
	export source=$base/cache/source/$name-$commit

	[ -d "$source" ] && return 0
	git -C "$git" rev-parse "$commit" >/dev/null || git -C "$git" fetch
	git -C "$git" rev-parse "$commit" >/dev/null || exit 1
	mkdir -p "$source"
	git -C "$git" archive "$commit" | tar -C "$source" -xf -
}

version() {
	export version=${1:?}
}

archive() {
	local url=${1:?}
	export archive="$base/cache/archive/$name-$(basename "$url")"
	export source=$base/cache/source/$name-$version

	[ -d "$source" ] && return 0

	trap 'rm -rf "$archive"' INT TERM EXIT HUP
	mkdir -p "$(dirname "$archive")"
	curl -Ls -o "$archive" "$url"
}

checksum() {
	local sum=${1:?}

	if command -v sha256sum >/dev/null; then
		sha256sum "$archive" | sed 's/ .*//'
	elif command -v sha256 >/dev/null; then
		sha256 "$archive" | sed 's/ .*//'
	elif command -v openssl >/dev/null; then
		openssl sha256 "$archive" | sed 's/.* //'
	fi | tee /dev/stderr | grep -Fqx "$sum" || {
		echo >&2 "$sum < expected"
		exit 1
	}

	trap 'rm -rf "$base/cache/tmp$$"' INT TERM EXIT HUP
	mkdir -p "$base/cache/tmp$$"
	rm -rf "$source"
	case "$archive" in
	(*gz) gzip -cd "$archive" ;;
	(*xz) xz -cd "$archive" ;;
	(*lz) lz -cd "$archive" ;;
	esac | tar -x -f - -C "$base/cache/tmp$$"
	mv "$(echo "$base/cache/tmp$$/"*)" "$source"
}

name=${1:?}
name=${name#build/}
name=${name%/}
base=$(cd "$(dirname "$0")/.."; pwd)
export PREFIX="$base/cache/prefix/$name"

[ -d "$PREFIX" ] && exit 0

. "$base/build/$name"

cd "$source"

trap 'rm -rf "$PREFIX"' INT TERM EXIT HUP

mkdir -p "$PREFIX"
build
exec rm -rf "$source"
