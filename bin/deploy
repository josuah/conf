#!/bin/sh -eu

list() {
	ls | grep -Ex 'v[0-9]+' | sort -n -k 2,2 -t v
}

[ -h current ] && cur=$(readlink current) || cur=

case " $* " in
(" init ")
	url=$2
	git clone --mirror "$url" repo
	git -C repo config tar.umask 002
	;;
(" pull "*?" ")
	ref=${2%/}
	new=$(list | awk -F v '$2 > v { v = $2 } END { print "v" v + 1 }')

	git -C repo fetch origin "$ref"
	git -C repo archive --prefix "$new/" "$ref" | tar -xf -

	if type stagit >/dev/null; then
		(cd repo; stagit .; ln -sf files.html index.html)
	fi

	mkdir -p shared "$new/v"
	echo "$ref" >$new/v/ref
	git -C repo rev-parse "$ref" >$new/v/commit
	date +"%Y-%m-%d %H-%M-%S" >$new/v/date

	[ -f "$new/Makefile" ] && make -C "$new" deploy

	echo "version $new ready"
	"$0" clean 5
	;;
(" go "*?" ")
	rm -rf repo/current
	ln -sf "$2" repo/current
	mv repo/current .
	;;
(" list "*)
	for v in $(list); do
		read commit <$v/v/commit
		read ref <$v/v/ref
		read date <$v/v/date
		[ "$cur" = "$v" ] && o=o || o=-
		echo "" "$o" "$v" "$date" "$commit" "$ref"
	done
	;;
(" clean "*)
	list | awk -v cur="$cur" -v keep="${2:-5}" '
		$0 != cur { A[NR] = $0 }
		END { for (i = 1; i <= NR - keep; i++ ) print A[i] }
	' | xargs -r rm -rf
	;;
(*)
	echo>&2 "usage:	${0##*/} init <url> - initialize the repository"
	echo>&2 "	${0##*/} pull <ref> - deploy new git object <ref>"
	echo>&2 "	${0##*/} list       - list available releases"
	echo>&2 "	${0##*/} clean <n>  - keep only last <n> releases"
	echo>&2 "	${0##*/} go <v>     - switch "current" to release <v>"
	exit 1
	;;
esac
