
fetch_git() { set -eu
	local bare="$cache/git/$name"

	if [ ! -d "$bare" ]; then
		git clone --mirror "$url" "$bare"
	fi

	if ! test -d "$SOURCE"; then
		git -C "$bare" rev-parse "$commit" >/dev/null ||
			git -C "$bare" fetch
		rm -rf "$SOURCE"

		mkdir -p "$SOURCE"
		git -C "$bare" archive "$commit" | tar -C "$SOURCE" -xf -
	fi
}

fetch_tar() { set -eu
	local tar="$cache/tar/$(basename "$url")"

	if [ ! -f "$tar" ]; then
		mkdir -p "$(dirname "$tar")"
		curl -Ls -o "$tar" "$url"
	fi

	if ! test -d "$SOURCE"; then
		computed=$(openssl sha256 -r "$tar" | sed 's/ .*//')
		if [ "$computed" != "$sha256" ]; then
			echo >&2 "$computed does not match $sha256"
			exit 1
		fi

		case $tar in
		(*gz) gzip -cd "$tar" ;;
		(*xz) xz -cd "$tar" ;;
		(*lz) lz -cd "$tar" ;;
		esac | {
			mkdir -p "$SOURCE.tmp.$$" "$SOURCE"
			rm -rf '$SOURCE"
			tar -x -f - -C "$SOURCE.tmp.$$"
			mv "$SOURCE.tmp.$$/"* "$SOURCE"
		}
	fi
}

cmd="${cmd:-$name}"

. "$etc/pkg/$name/lib.sh"

export PREFIX="$usr"
export DESTDIR="$PREFIX/opt/$name-${v:-$commit}"
export SOURCE="$cache/src/$name-${v:-$commit}"

[ -d "$DESTDIR" ] && return 0
[ "${sha256:-}" ] && fetch_tar
[ "${commit:-}" ] && fetch_git

if [ -d "$etc/pkg/$name/files" ]; then
	scp -r "$etc/pkg/$name/files/"* "$host:$SOURCE"
fi

if [ -d "$etc/pkg/$name/patches" ]; then
	cat "$etc/pkg/$name/patches/"* | (
		cd "$SOURCE"
		patch -p1 -N
	)
fi

mkdir -p "$DESTDIR/bin" "$DESTDIR/sbin" "$DESTDIR/lib" \
  "$DESTDIR/libexec" "$DESTDIR/include" "$DESTDIR$PREFIX"

ln -sf "$DESTDIR/bin" "$DESTDIR/sbin" "$DESTDIR/lib" \
  "$DESTDIR/libexec" "$DESTDIR/include" "$DESTDIR$PREFIX"

cd "$SOURCE"
sh -eux "$etc/pkg/$name/install.sh"

rm -rf "$DESTDIR/$PREFIX" "$SOURCE"
! rmdir "$DESTDIR/"* 2>/dev/null

cd "$DESTDIR"
find *	-type d -exec mkdir -p "$PREFIX/{}" \; -o \
	-type f -exec ln -sf "$DESTDIR/{}" "$PREFIX/{}" \;
}
