#!/bin/sh -eu

openssl_cnf=' # adapted from OpenBSD /etc/ssl/ikeca.cnf

CERT_C				= AQ
CERT_ST				= Antarctica
CERT_L				= World Park Base
CERT_O				= Greenpeace
CERT_OU				= Antarctic Treaty
CERT_CN				= nohost.nodomain
CERT_EMAIL			= root@localhost

CERTPATHLEN			= 1
CERTUSAGE			= digitalSignature,keyCertSign,cRLSign
EXTCERTUSAGE			= serverAuth,clientAuth
CERTIP				= 0.0.0.0
CERTFQDN			= nohost.nodomain
NSCERTTYPE			= server,client


[req]

default_bits			= 4096
default_md			= sha256
default_keyfile 		= $ENV::KEYFILE
distinguished_name		= distinguished_name
attributes			= req_attributes
req_extensions			= $ENV::REQ_EXT


[distinguished_name]

countryName			= Country Name (2 letter code)
countryName_default		= $ENV::CERT_C
countryName_min			= 2
countryName_max			= 2

stateOrProvinceName		= State or Province Name (full name)
stateOrProvinceName_default	= $ENV::CERT_ST

localityName			= Locality Name (eg, city)
localityName_default		= $ENV::CERT_L

0.organizationName		= Organization Name (eg, company)
0.organizationName_default	= $ENV::CERT_O

organizationalUnitName		= Organizational Unit Name (eg, section)
organizationalUnitName_default	= $ENV::CERT_OU

commonName			= Common Name (eg, fully qualified host name)
commonName_max			= 64
commonName_default		= $ENV::CERT_CN

emailAddress			= Email Address
emailAddress_max		= 64
emailAddress_default		= $ENV::CERT_EMAIL


[req_attributes]

challengePassword		= $ENV::PASSWORD
challengePassword_min		= 4
challengePassword_max		= 20

unstructuredName		= An optional company name


[x509v3_extensions]

nsCaRevocationUrl		= http://127.0.0.1/ca-crl.pem
nsComment			= "This is a comment"
nsCertType			= 0x40


[x509v3_CA]

basicConstraints		= critical,CA:true,pathlen:$ENV::CERTPATHLEN
keyUsage			= $ENV::CERTUSAGE


[x509v3_IPAddr]

keyUsage			= $ENV::CERTUSAGE
nsCertType			= $ENV::NSCERTTYPE
subjectAltName			= IP:$ENV::CERTIP
extendedKeyUsage		= $ENV::EXTCERTUSAGE


[x509v3_FQDN]

keyUsage			= $ENV::CERTUSAGE
nsCertType			= $ENV::NSCERTTYPE
subjectAltName			= DNS:$ENV::CERTFQDN
extendedKeyUsage		= $ENV::EXTCERTUSAGE


[ca]

default_ca			= CA_default


[CA_sign_policy]

countryName			= optional
stateOrProvinceName		= optional
localityName			= optional
organizationName		= optional
organizationalUnitName		= optional
commonName			= supplied
emailAddress			= optional


[CA_default]

database			= index.txt
serial				= serial.txt
default_md			= sha256
default_days			= 365
default_crl_days		= 365
unique_subject			= yes
email_in_dn			= yes
policy				= CA_sign_policy

' # end

umask 077

random_password() { set -eu
	openssl base64 -in /dev/urandom 2>/dev/null \
	| sed -r "y,+/,-_,; s,^,$(date +%y%m%d-),; s,(.{32}).*,\1,; q"
}

case " $* " in
(" ca "*?" create "*)
	export CERT_CN="$2"
	export PASSWORD="$(random_password)"
	mkdir "/etc/ssl/$CERT_CN"
	cd "/etc/ssl/$CERT_CN"
	echo "$openssl_cnf" | openssl ca -config /dev/stdin
	;;
(" ca "*?" delete ")
	rm -rf "/etc/ssl/$2"
	;;
(" csr "*?" ")
	dom=$2
	dir=$(echo "$dom" | tr '*' '_')
	mkdir -p /etc/ssl/private
	cd /etc/ssl
	echo "$openssl_cnf" | openssl req -config /dev/stdin -new -nodes \
	  -keyout "$dom.key" -out "$dom.csr"
	;;
(" ca "*?" sign "*?" ")
	echo "$openssl_cnf" | openssl x509 -config /dev/stdin -req \
	  -in "/etc/ssl/private/$dom.csr" \
	  -signkey "/etc/ssl/private/$dom.key" \
	  -out "/etc/ssl/$dom.crt"
	;;
(" dhparam ")
	[ -f "/etc/ssl/dhparam.pem" ] && exec echo "dhparam.pem already exists"
	openssl dhparam -out /etc/ssl/dhparam.pem 2048
	;;
(*)
	echo>&2	"usage:	${0##*/} ca <name> create"
	echo>&2	"	${0##*/} ca <name> delete"
	echo>&2	"	${0##*/} dhparam"
	echo>&2	"	${0##*/} csr <name>"
	echo>&2	"	${0##*/} ca <name> sign <csr>"
esac
